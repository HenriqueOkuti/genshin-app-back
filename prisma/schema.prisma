generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model BackpackInfo {
  id             Int            @id @default(autoincrement())
  userId         Int
  weeklyBossMat  Boolean        @default(false)
  bossMat        Boolean        @default(false)
  dungeonMat     Boolean        @default(false)
  enemyMat       Boolean        @default(false)
  localSpecialty Boolean        @default(false)
  weaponMat      Boolean        @default(false)
  itemId         Int
  quantity       Int
  UserBackpack   UserBackpack[]
}

model BossMats {
  id         Int          @id @default(autoincrement())
  name       String       @db.VarChar(255)
  image      String       @db.VarChar(255)
  key        String       @db.VarChar(255)
  Characters Characters[]
}

model CharacterAscensions {
  id          Int        @id @default(autoincrement())
  characterId Int
  title       String     @db.VarChar(255)
  text        String
  image       String     @db.VarChar(255)
  Characters  Characters @relation(fields: [characterId], references: [id])
}

model CharacterConstellations {
  id          Int        @id @default(autoincrement())
  characterId Int
  number      Int
  title       String     @db.VarChar(255)
  text        String
  image       String     @db.VarChar(255)
  Characters  Characters @relation(fields: [characterId], references: [id])
}

model CharacterTalents {
  id          Int           @id @default(autoincrement())
  characterId Int
  number      Int
  title       String        @db.VarChar(255)
  text        String
  image       String        @db.VarChar(255)
  Characters  Characters    @relation(fields: [characterId], references: [id])
  UserTalents UserTalents[]
}

model Characters {
  id                      Int                       @id @default(autoincrement())
  name                    String                    @db.VarChar(255)
  elementId               Int
  weaponId                Int
  imageSplashArt          String                    @db.VarChar(255)
  imageFace               String                    @db.VarChar(255)
  localSpecialtyId        Int
  dungeonMatId            Int
  bossMatId               Int
  weeklyBossMatId         Int
  BossMats                BossMats                  @relation(fields: [bossMatId], references: [id])
  DungeonMats             DungeonMats               @relation(fields: [dungeonMatId], references: [id])
  Elements                Elements                  @relation(fields: [elementId], references: [id])
  LocalSpecialty          LocalSpecialty            @relation(fields: [localSpecialtyId], references: [id])
  Weapons                 Weapons                   @relation(fields: [weaponId], references: [id])
  WeeklyBossMats          WeeklyBossMats            @relation(fields: [weeklyBossMatId], references: [id])
  CharacterAscensions     CharacterAscensions[]
  CharacterConstellations CharacterConstellations[]
  CharacterEnemyMats      CharacterEnemyMats[]
  CharacterTalents        CharacterTalents[]
  UserCharacters          UserCharacters[]
  UserTalents             UserTalents[]
}

model DungeonMats {
  id           Int          @id @default(autoincrement())
  name         String       @db.VarChar(255)
  class        String       @db.VarChar(255)
  rarity       Int
  key          String       @db.VarChar(255)
  image        String       @db.VarChar(255)
  day          String       @db.VarChar(255)
  dungeonId    Int
  weaponMat    Boolean
  characterMat Boolean
  Dungeons     Dungeons     @relation(fields: [dungeonId], references: [id])
  Characters   Characters[]
}

model Dungeons {
  id          Int           @id @default(autoincrement())
  name        String        @db.VarChar(255)
  text        String
  image       String        @db.VarChar(255)
  regionId    Int
  Region      Region        @relation(fields: [regionId], references: [id])
  DungeonMats DungeonMats[]
}

model Elements {
  id         Int          @id @default(autoincrement())
  name       String       @db.VarChar(255)
  image      String       @db.VarChar(255)
  Characters Characters[]
}

model EnemyMats {
  id                 Int                  @id @default(autoincrement())
  name               String               @db.VarChar(255)
  image              String               @db.VarChar(255)
  key                String               @db.VarChar(255)
  rarity             Int
  CharacterEnemyMats CharacterEnemyMats[]
}

model Gems {
  id        Int    @id @default(autoincrement())
  name      String @db.VarChar(255)
  image     String @db.VarChar(255)
  rarity    Int
  elementId Int
}

model LocalSpecialty {
  id         Int          @id @default(autoincrement())
  name       String       @db.VarChar(255)
  key        String       @db.VarChar(255)
  image      String       @db.VarChar(255)
  Characters Characters[]
}

model Region {
  id       Int        @id @default(autoincrement())
  name     String     @db.VarChar(255)
  Dungeons Dungeons[]
}

model Session {
  id        Int      @id @default(autoincrement())
  userId    Int      @unique
  token     String   @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Users     Users    @relation(fields: [userId], references: [id])
}

model TaskInfo {
  id             Int     @id @default(autoincrement())
  weeklyBossMat  Boolean @default(false)
  bossMat        Boolean @default(false)
  dungeonMat     Boolean @default(false)
  enemyMat       Boolean @default(false)
  localSpecialty Boolean @default(false)
  weaponMat      Boolean @default(false)
  itemId         Int
  quantity       Int
  Tasks          Tasks[]
}

model Tasks {
  id         Int         @id @default(autoincrement())
  name       String      @db.VarChar(255)
  taskInfoId Int
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  TaskInfo   TaskInfo    @relation(fields: [taskInfoId], references: [id])
  UserTasks  UserTasks[]
}

model ThemeHexes {
  id      Int    @id @default(autoincrement())
  themeId Int
  hex1    String @db.VarChar(255)
  hex2    String @db.VarChar(255)
  hex3    String @db.VarChar(255)
  hex4    String @db.VarChar(255)
  hex5    String @db.VarChar(255)
  hex6    String @db.VarChar(255)
  Themes  Themes @relation(fields: [themeId], references: [id])
}

model Themes {
  id         Int          @id @default(autoincrement())
  name       String       @db.VarChar(255)
  image      String       @db.VarChar(255)
  ThemeHexes ThemeHexes[]
}

model UserBackpack {
  id             Int          @id @default(autoincrement())
  userId         Int
  backpackInfoId Int
  BackpackInfo   BackpackInfo @relation(fields: [backpackInfoId], references: [id])
  Users          Users        @relation(fields: [userId], references: [id])
}

model UserCharacters {
  id                 Int                  @id @default(autoincrement())
  userId             Int
  characterId        Int
  level              Int                  @default(1)
  friendship         Int                  @default(1)
  Characters         Characters           @relation(fields: [characterId], references: [id])
  Users              Users                @relation(fields: [userId], references: [id])
  UserAscensions     UserAscensions[]
  UserCharTalents    UserCharTalents[]
  UserConstellations UserConstellations[]
}

model UserTasks {
  id     Int   @id @default(autoincrement())
  userId Int
  taskId Int
  Tasks  Tasks @relation(fields: [taskId], references: [id])
  Users  Users @relation(fields: [userId], references: [id])
}

model Users {
  id                 Int                  @id @default(autoincrement())
  name               String               @default("New User") @db.VarChar(255)
  email              String               @unique(map: "Index_email") @db.VarChar(255)
  password           String               @db.VarChar(255)
  image              String               @default("https://i.redd.it/02qhtmulmjs71.jpg") @db.VarChar(255)
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  Session            Session?
  UserAscensions     UserAscensions[]
  UserBackpack       UserBackpack[]
  UserCharTalents    UserCharTalents[]
  UserCharacters     UserCharacters[]
  UserConstellations UserConstellations[]
  UserTalents        UserTalents[]
  UserTasks          UserTasks[]
}

model Weapons {
  id         Int          @id @default(autoincrement())
  name       String       @db.VarChar(255)
  image      String       @db.VarChar(255)
  Characters Characters[]
}

model WeeklyBossMats {
  id         Int          @id @default(autoincrement())
  name       String       @db.VarChar(255)
  image      String       @db.VarChar(255)
  key        String       @db.VarChar(255)
  Characters Characters[]
}

model UserAscensions {
  id              Int            @id @default(autoincrement())
  userId          Int
  userCharacterId Int
  value           Int            @default(1)
  UserCharacters  UserCharacters @relation(fields: [userCharacterId], references: [id])
  Users           Users          @relation(fields: [userId], references: [id])
}

model UserConstellations {
  id              Int            @id @default(autoincrement())
  userId          Int
  userCharacterId Int
  value           Int            @default(1)
  UserCharacters  UserCharacters @relation(fields: [userCharacterId], references: [id])
  Users           Users          @relation(fields: [userId], references: [id])
}

model UserTalents {
  id               Int               @id @default(autoincrement())
  userId           Int
  userCharacterId  Int
  characterId      Int
  talentId         Int
  value            Int               @default(1)
  Characters       Characters        @relation(fields: [characterId], references: [id])
  CharacterTalents CharacterTalents  @relation(fields: [talentId], references: [id])
  Users            Users             @relation(fields: [userId], references: [id])
  UserCharTalents  UserCharTalents[]
}

model CharacterEnemyMats {
  id          Int        @id @default(autoincrement())
  characterId Int
  enemyMatId  Int
  Characters  Characters @relation(fields: [characterId], references: [id])
  EnemyMats   EnemyMats  @relation(fields: [enemyMatId], references: [id])
}

model UserCharTalents {
  id              Int            @id @default(autoincrement())
  userId          Int
  userCharacterId Int
  userTalentId    Int
  UserCharacters  UserCharacters @relation(fields: [userCharacterId], references: [id], map: "UserTalents_userCharacterId_fkey")
  Users           Users          @relation(fields: [userId], references: [id], map: "UserTalents_userId_fkey")
  UserTalents     UserTalents    @relation(fields: [userTalentId], references: [id], map: "UserTalents_userTalentId_fkey")
}
